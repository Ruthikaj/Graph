class Solution {
    void dfs(vector<vector<int>> &ans, int sr, int sc, int newColor, int inColor,vector<int>delrow,vector<int>delcol){
        ans[sr][sc] = newColor;
        int n = ans.size();
        int m = ans[0].size();
        for(int i = 0;i<4;i++){
            int nrow = sr + delrow[i];
            int ncol  = sc + delcol[i];
            if(nrow>=0 && nrow<n && ncol>=0 && ncol<m && ans[nrow][ncol]!=newColor && ans[nrow][ncol] == inColor){
                dfs(ans,nrow,ncol,newColor,inColor,delrow,delcol);
            }
        }
    }
public:
    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int color) {
        int inColor = image[sr][sc];
        vector<int>delrow  = {-1,0,+1,0};
        vector<int>delcol = {0,+1,0,-1};
        vector<vector<int>> ans = image;
        dfs(ans,sr,sc,color,inColor,delrow,delcol);


return ans;
        
    }
};
